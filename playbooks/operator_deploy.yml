---
- name: Install pattern (using pattern-install chart)
  hosts: localhost
  connection: local
  gather_facts: false

  roles:
    - role: pattern_settings # set general pattern vars
    - role: install_settings # set pattern-install specific vars
    - role: validate_prereq # ensure installation depencies are present
    - role: validate_cluster # ensure a cluster is connected and has a default storage class
    - role: pattern_install_template # render the pattern-install helm chart

  tasks:
    - name: Origin validation (optional, controlled by DISABLE_VALIDATE_ORIGIN / disable_validate_origin)
      block:
        - name: Resolve disable_validate_origin flag
          ansible.builtin.set_fact:
            disable_validate_origin: >-
              {{
                (
                  disable_validate_origin
                  | default(lookup('env', 'DISABLE_VALIDATE_ORIGIN'), true)
                  | default('false', false)
                ) | bool
              }}

        - name: Validate origin (remote/branch must exist)
          ansible.builtin.include_role:
            name: validate_origin
          when: not disable_validate_origin

    - name: Apply rendered pattern-install chart manifests (with retry)
      block:
        - name: Preview manifest that will be applied
          ansible.builtin.shell: |
            printf "==> Applying the following manifest to the cluster:\n\n" > /dev/tty
            printf "%s\n" "{{ pattern_install_rendered_yaml }}" > /dev/tty

        - name: Apply via oc with retry
          ansible.builtin.command: oc apply -f -
          args:
            stdin: "{{ pattern_install_rendered_yaml }}"
            stdin_add_newline: false
          register: _apply
          retries: 10
          delay: 15
          until: _apply.rc == 0

        - name: Print success message
          ansible.builtin.shell: printf "==> Installation succeeded!\n" > /dev/tty

      rescue:
        - name: Print failure summary and abort
          ansible.builtin.shell: |
            printf "==> Installation failed. Error:\n" > /dev/tty
            printf "%s\n" "{{ _apply.stderr | default(_apply.stdout) | default('') }}" > /dev/tty
            exit 1
